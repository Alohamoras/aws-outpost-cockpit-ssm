{
  "schemaVersion": "2.2",
  "description": "AWS Outpost Cockpit final configuration (users, settings, verification)",
  "parameters": {
    "snsTopicArn": {
      "type": "String",
      "description": "SNS Topic ARN for notifications"
    },
    "instanceId": {
      "type": "String",
      "description": "Instance ID for notifications",
      "default": "{{INSTANCE_ID}}"
    }
  },
  "mainSteps": [
    {
      "action": "aws:runShellScript",
      "name": "FinalConfiguration",
      "inputs": {
        "timeoutSeconds": "600",
        "runCommand": [
          "#!/bin/bash",
          "set -e",
          "exec > >(tee -a /var/log/ssm-cockpit-config.log)",
          "exec 2>&1",
          "",
          "echo '=== FINAL CONFIGURATION PHASE ==='",
          "echo \"Start time: $(date)\"",
          "",
          "# SNS notification function",
          "send_notification() {",
          "    local status=\"$1\"",
          "    local message=\"$2\"",
          "    if [[ -n '{{snsTopicArn}}' && '{{snsTopicArn}}' != 'None' ]]; then",
          "        aws sns publish --region $(curl -s http://169.254.169.254/latest/meta-data/placement/region) \\",
          "            --topic-arn '{{snsTopicArn}}' \\",
          "            --subject \"Final Configuration $status - {{instanceId}}\" \\",
          "            --message \"$message\" || echo 'SNS notification failed'",
          "    fi",
          "}",
          "",
          "send_notification 'STARTED' 'Final configuration started'",
          "",
          "# User configuration",
          "echo 'Configuring users...'",
          "if ! id admin >/dev/null 2>&1; then",
          "    useradd -m -G wheel admin",
          "    echo '✅ Admin user created'",
          "else",
          "    echo 'ℹ️ Admin user already exists'",
          "fi",
          "",
          "# Set passwords",
          "echo 'admin:Cockpit123' | chpasswd",
          "echo 'rocky:Cockpit123' | chpasswd",
          "echo '✅ User passwords configured'",
          "",
          "# Configure sudo access",
          "echo '%wheel ALL=(ALL) NOPASSWD: ALL' > /etc/sudoers.d/wheel",
          "chmod 440 /etc/sudoers.d/wheel",
          "echo '✅ Sudo access configured'",
          "",
          "# Add users to relevant groups",
          "usermod -a -G wheel,libvirt,kvm admin 2>/dev/null || echo 'Group assignment warnings expected'",
          "usermod -a -G wheel,libvirt,kvm rocky 2>/dev/null || echo 'Group assignment warnings expected'",
          "echo '✅ User group assignments completed'",
          "",
          "# Final Cockpit service restart and verification",
          "echo 'Restarting Cockpit service...'",
          "systemctl restart cockpit.socket",
          "sleep 5",
          "",
          "# Get public IP for verification",
          "PUBLIC_IP=$(curl -s --max-time 10 http://169.254.169.254/latest/meta-data/public-ipv4 || echo 'IP-NOT-AVAILABLE')",
          "",
          "# Verify Cockpit is running",
          "if systemctl is-active --quiet cockpit.socket; then",
          "    echo '✅ Cockpit service is running'",
          "    ",
          "    # Optional: Test web interface connectivity",
          "    echo 'Testing Cockpit web interface...'",
          "    if curl -k -s --max-time 10 --connect-timeout 5 https://localhost:9090/ >/dev/null 2>&1; then",
          "        echo '✅ Cockpit web interface is accessible'",
          "    else",
          "        echo '⚠️ Cockpit web interface test inconclusive (may be normal)'",
          "    fi",
          "    ",
          "    # Generate deployment summary",
          "    echo ''",
          "    echo '=============================================='",
          "    echo '🎉 COCKPIT DEPLOYMENT COMPLETED SUCCESSFULLY!'",
          "    echo '=============================================='",
          "    echo \"Instance ID: {{instanceId}}\"",
          "    echo \"Public IP: $PUBLIC_IP\"",
          "    echo \"Cockpit URL: https://$PUBLIC_IP:9090\"",
          "    echo \"Users: admin/rocky (Password: Cockpit123)\"",
          "    ",
          "    # Check installed components",
          "    echo 'Installed Components:'",
          "    if systemctl is-active --quiet libvirtd 2>/dev/null; then",
          "        echo '  ✅ Virtualization (libvirt)'",
          "    else",
          "        echo '  ⚠️ Virtualization (not available)'",
          "    fi",
          "    if command -v podman >/dev/null 2>&1; then",
          "        echo '  ✅ Containers (podman)'",
          "    else",
          "        echo '  ⚠️ Containers (not available)'",
          "    fi",
          "    if systemctl is-active --quiet pmcd 2>/dev/null; then",
          "        echo '  ✅ Monitoring (PCP)'",
          "    else",
          "        echo '  ⚠️ Monitoring (not available)'",
          "    fi",
          "    if rpm -q cockpit-file-sharing >/dev/null 2>&1; then",
          "        echo '  ✅ 45Drives Extensions'",
          "    else",
          "        echo '  ⚠️ 45Drives Extensions (not available)'",
          "    fi",
          "    echo \"Completion Time: $(date)\"",
          "    echo '=============================================='",
          "    ",
          "    # Final success notification",
          "    send_notification 'SUCCESS' \"🚀 Complete Cockpit deployment finished! Access: https://$PUBLIC_IP:9090, Users: admin/rocky (password: Cockpit123)\"",
          "else",
          "    echo '❌ Cockpit service failed final verification'",
          "    send_notification 'FAILED' 'Cockpit service failed final verification'",
          "    exit 1",
          "fi",
          "",
          "# Create final completion markers",
          "echo \"$(date): Complete Cockpit deployment finished successfully\" > /tmp/cockpit-deployment-complete",
          "echo \"$PUBLIC_IP\" > /tmp/instance-public-ip",
          "echo 'Final configuration phase completed successfully'",
          "echo \"Completion time: $(date)\""
        ]
      }
    }
  ]
}